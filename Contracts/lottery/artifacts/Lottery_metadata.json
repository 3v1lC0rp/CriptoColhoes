{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_cake",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_timer",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "ticketSupply",
						"type": "uint256"
					}
				],
				"name": "LotteryClose",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "ticketSupply",
						"type": "uint256"
					}
				],
				"name": "LotteryOpen",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ticketIDs",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalCost",
						"type": "uint256"
					}
				],
				"name": "NewBatchMint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"name": "RequestNumbers",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "newMaxRange",
						"type": "uint16"
					}
				],
				"name": "UpdatedMaxRange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "newLotterySize",
						"type": "uint8"
					}
				],
				"name": "UpdatedSizeOfLottery",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "aDevs",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dev",
						"type": "address"
					}
				],
				"name": "addDev",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "_numberOfTickets",
						"type": "uint8"
					}
				],
				"name": "batchBuyLottoTicket",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "claimReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_numberOfTickets",
						"type": "uint256"
					}
				],
				"name": "costToBuyTickets",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalCost",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8[]",
						"name": "_prizeDistribution",
						"type": "uint8[]"
					},
					{
						"internalType": "uint256",
						"name": "_costPerTicket",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_startingTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_closingTimestamp",
						"type": "uint256"
					}
				],
				"name": "createNewLotto",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "devFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_seed",
						"type": "uint256"
					}
				],
				"name": "drawWinningNumbers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					}
				],
				"name": "getBasicLottoInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "lotteryID",
								"type": "uint256"
							},
							{
								"internalType": "enum Lottery.Status",
								"name": "lotteryStatus",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "prizePoolInCake",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "costPerTicket",
								"type": "uint256"
							},
							{
								"internalType": "uint8[]",
								"name": "prizeDistribution",
								"type": "uint8[]"
							},
							{
								"internalType": "uint256",
								"name": "startingTimestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "closingTimestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint16[]",
								"name": "winningTickets",
								"type": "uint16[]"
							}
						],
						"internalType": "struct Lottery.LottoInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lotteryNFT",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxValidRange_",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nDevs",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pintelho",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "setCurrentTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sizeOfLottery_",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "timerAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_newSize",
						"type": "uint8"
					}
				],
				"name": "updateSizeOfLottery",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawCake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"createNewLotto(uint8[],uint256,uint256,uint256)": {
					"params": {
						"_closingTimestamp": "The block timestamp after which no more tickets          will be sold for the lottery. Note that this timestamp MUST          be after the starting block timestamp. ",
						"_prizeDistribution": "An array defining the distribution of the           prize pool. I.e if a lotto has 5 numbers, the distribution could          be [5, 10, 15, 20, 30] = 95%. This means if you get one number          right you get 5% of the pool, 2 matching would be 10% and so on.",
						"_startingTimestamp": "The block timestamp for the beginning of the           lottery. "
					}
				},
				"getCurrentTime()": {
					"returns": {
						"_0": "uint for the current Testable timestamp."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setCurrentTime(uint256)": {
					"details": "Will revert if not running in test mode.",
					"params": {
						"time": "timestamp to set current Testable time to."
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getCurrentTime()": {
					"notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
				},
				"setCurrentTime(uint256)": {
					"notice": "Sets the current time."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"lottery/Lottery.sol": "Lottery"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"lottery/ILotteryNFT.sol": {
			"keccak256": "0xca4b8b6e68ce023d4121a5e13fb2c6f6d58a8d2b5b5f4c8e6bd2d049c5be1d42",
			"license": "MIT",
			"urls": [
				"bzz-raw://17de04a27b24a4fd17b364c5a9a386e42ae2ac4dbf4d2428423665b22e271123",
				"dweb:/ipfs/QmVsUVTKDcLi7d91u5GLDG1A7MziXDbUbbGonb5u6cTjxf"
			]
		},
		"lottery/Initializable.sol": {
			"keccak256": "0xc45996dcf7dd258e184cb049c85f66213e4494b3dbc376e91acd57de9135f68f",
			"license": "MIT",
			"urls": [
				"bzz-raw://c4accd6cacd1cdeea85609222cabda9ec107b1aa07ca84b8b5186e2c8775202f",
				"dweb:/ipfs/QmVFUZrS58hF1tfr4cu8Gzc6UKwqQogWS83dMYEA129uov"
			]
		},
		"lottery/Lottery.sol": {
			"keccak256": "0x50533ed6346429b5f9f1486a46423d7eaa314356aae837ed1c93148fb60d6d6d",
			"license": "MIT",
			"urls": [
				"bzz-raw://89eaff7319072514492201b1b6b9775c8568fb58ed358c384c1a6f40767934ef",
				"dweb:/ipfs/QmVfx8PSvhhtT9sw3G7CvQyK26C7Wpqq7zhfaf4oVWnRVU"
			]
		},
		"lottery/SafeMath16.sol": {
			"keccak256": "0xbfd40f607a47e85b2b76280e1b5f83eadc6ba9323cc5c0ba2f3e01b1ef032cee",
			"license": "MIT",
			"urls": [
				"bzz-raw://2a3c45d25844cd81ab3251a79dcb99a9aca374a849adc988515dda68ae65d71c",
				"dweb:/ipfs/Qmd4BMtzGb7fcZPG3fmGmoHUEhNyhf4yDHBUF7YJYvF6Pe"
			]
		},
		"lottery/SafeMath8.sol": {
			"keccak256": "0x4fc94bba65754fcca14bff38e54c5702022e5e87be345d9aec67ae3e94a6c23c",
			"license": "MIT",
			"urls": [
				"bzz-raw://8f6fd8d9084790cb4e4dcf667d4eb70aa66b84d80d31a70a99159ca08248fa3c",
				"dweb:/ipfs/QmTWSUc2DBFNDdXAQnHCaPkFrXry7NvEvfaGtHtetZDyKi"
			]
		},
		"lottery/Testable.sol": {
			"keccak256": "0xf8132c85fc9d7c6af46094093259a09fb44f75cde2d7e75a1c748cb491705afa",
			"license": "MIT",
			"urls": [
				"bzz-raw://9dc38dcffd9274db81633a9931bc72610364b2f7bfb6f95684afdb2a1ccf56a6",
				"dweb:/ipfs/QmNScXegsspX1PakfVWAdEnZq2XcmK9EtxNjdo55KdAXf2"
			]
		},
		"lottery/Timer.sol": {
			"keccak256": "0x378f52d59402d41cb33b147310fd7cea23595573a1f63023b563d2a89caece61",
			"license": "MIT",
			"urls": [
				"bzz-raw://c77fe588064ad00949cfea2bb8517647ff8cc02f94f466c4dcb40a3d8ef464ae",
				"dweb:/ipfs/QmWMNykJ1jbD6WiXXZf7rBkXmGGQEQHWvjU1MV4Uex1Zmu"
			]
		},
		"lottery/access/Ownable.sol": {
			"keccak256": "0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7",
				"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ"
			]
		},
		"lottery/token/ERC20/IERC20.sol": {
			"keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
				"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
			]
		},
		"lottery/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7",
			"license": "MIT",
			"urls": [
				"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451",
				"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3"
			]
		},
		"lottery/utils/Address.sol": {
			"keccak256": "0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e",
				"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX"
			]
		},
		"lottery/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		},
		"lottery/utils/math/SafeMath.sol": {
			"keccak256": "0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e",
			"license": "MIT",
			"urls": [
				"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509",
				"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT"
			]
		}
	},
	"version": 1
}