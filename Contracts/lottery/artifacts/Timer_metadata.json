{
	"compiler": {
		"version": "0.8.1+commit.df193b15"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "getCurrentTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "setCurrentTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getCurrentTime()": {
					"returns": {
						"_0": "uint256 for the current Testable timestamp."
					}
				},
				"setCurrentTime(uint256)": {
					"details": "Will revert if not running in test mode.",
					"params": {
						"time": "timestamp to set `currentTime` to."
					}
				}
			},
			"title": "Universal store of current contract time for testing environments.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getCurrentTime()": {
					"notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
				},
				"setCurrentTime(uint256)": {
					"notice": "Sets the current time."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"lottery/Timer.sol": "Timer"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"lottery/Timer.sol": {
			"keccak256": "0x378f52d59402d41cb33b147310fd7cea23595573a1f63023b563d2a89caece61",
			"license": "MIT",
			"urls": [
				"bzz-raw://c77fe588064ad00949cfea2bb8517647ff8cc02f94f466c4dcb40a3d8ef464ae",
				"dweb:/ipfs/QmWMNykJ1jbD6WiXXZf7rBkXmGGQEQHWvjU1MV4Uex1Zmu"
			]
		}
	},
	"version": 1
}